{{ '<?php' }}


namespace {{ event.namespace }}\Processor\Event;

use {{ event.abstract.namespace }};

class {{ event.name }} extends {{ event.abstract.class }}

{
  /**
   * @devtoolsOverwritable
   *
   * @return string
   */
  public function getGroup()
  {
    return "{{ message.identifier.group }}";
  }

  /**
   * @devtoolsOverwritable
   *
   * @return string
   */
  public function getName()
  {
    return "{{ message.identifier.name }}";
  }

  /**
   * @devtoolsOverwritable
   *
   * @return string
   */
  public function getProcessorName()
  {
    return "{{ message.identifier.processor }}";
  }

  /**
   * @devtoolsOverwritable
   *
   * @return {{ message.name }}

   */
  public function getMessageClass()
  {
    return new {{ message.name }};
  }

  /**
   * @param {{ message.name }} $message
   *
   * @return bool
   */
  public function process({{ message.name }} $message)
  {
    $this->log("Starting to process Event Message " . get_class($message));

    return true;
  }

  /**
   * @return bool
   */
  public function isSync()
  {
    return false;
  }

  /**
   * Use the information in the message to figure out if we should process now
   * @param {{ message.name }} $message
   *
   * @return bool
   */
  public function canProcess($message)
  {
    return true;
  }

}
