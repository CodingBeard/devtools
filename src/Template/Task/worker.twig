{{ '<?php' }}


namespace {{ worker.namespace }}\Processor\Worker;

use {{ message.namespace }}\Message\{{ message.name }};
use {{ worker.abstract.namespace }};

class {{ worker.name }} extends {{ worker.abstract.class }}

{
  /**
   * @devtoolsOverwritable
   *
   * @return string
   */
  public function getGroup()
  {
    return "{{ message.identifier.group }}";
  }

  /**
   * @devtoolsOverwritable
   *
   * @return string
   */
  public function getName()
  {
    return "{{ message.identifier.name }}";
  }

  /**
   * @devtoolsOverwritable
   *
   * @return {{ message.name }}

   */
  public function getMessageClass()
  {
    return new {{ message.name }};
  }

  /**
   * @param {{ message.name }} $message
   *
   * @return bool
   */
  public function process({{ message.name }} $message)
  {
    $this->log("Starting to process Event Message " . get_class($message));

    return true;
  }

  /**
   * @param \Exception $e
   *
   * @return bool
   */
  public function isFailed(\Exception $e)
  {
    // Work out from the exception message if the job should go into the
    // Retry queue (return false) or the Fail queue (return true)

    return true;
  }

}
